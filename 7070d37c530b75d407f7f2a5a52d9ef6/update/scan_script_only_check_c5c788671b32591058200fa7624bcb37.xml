<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_script_only_check">
    <scan_script_only_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>security</category>
        <description>This property escapes XML values at the parser level for the user interface. It prevents reflected and stored cross-site scripting attacks. If "glide.ui.escape_text" is not set to the recommended value of "true", then XML values will not be escaped at the parser level for the user interface; this will leave jelly templates susceptible to reflected and stored cross site scripting attacks. This property is not applicable in Service Portal.</description>
        <documentation_url>https://docs.servicenow.com/csh?version=latest&amp;topicname=escape-xml.html</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>XML values are not escaped</name>
        <priority>2</priority>
        <resolution_details>Ensure the property "glide.ui.escape_text" is set to "true".</resolution_details>
        <run_condition>gs.getProperty('scan_script_only_check_c5c788671b32591058200fa7624bcb37','')==''</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {
	
	var _strPropertyName = 'glide.ui.escape_text';
	var _grProperty      = new GlideRecord('sys_properties');
	var _hasFinding      = true;
	
	if (_grProperty.get('name', _strPropertyName)) {		
		var _strPropertyType  = String(_grProperty.getValue('type') || '').toLowerCase().trim();
		var _strPropertyValue = String(_grProperty.getValue('value') || '').toLowerCase().trim();
		
		_hasFinding = 
			!(_strPropertyType == 'boolean' || _strPropertyType == 'string') || 
			_strPropertyValue !== 'true';
	}
	else {
		engine.finding.setValue(
			'finding_details', 
			'System Property "' + _strPropertyName + '" does not exist'
		);
	}
	
	if (_hasFinding) {
		if (_grProperty.isValidRecord()) {
			engine.finding.setCurrentSource(_grProperty);
		}
		
		engine.finding.increment();		
	}
	
})(engine);
]]></script>
        <short_description>XML values are not escaped</short_description>
        <sys_class_name>scan_script_only_check</sys_class_name>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2022-11-02 06:19:34</sys_created_on>
        <sys_id>c5c788671b32591058200fa7624bcb37</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>XML values are not escaped</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>scan_script_only_check_c5c788671b32591058200fa7624bcb37</sys_update_name>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-10-04 13:53:05</sys_updated_on>
    </scan_script_only_check>
    <sys_translated_text action="delete_multiple" query="documentkey=c5c788671b32591058200fa7624bcb37"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>c5c788671b32591058200fa7624bcb37</id>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2024-10-04 13:53:04</sys_created_on>
        <sys_id>c1ab38e183c15210c1321429feaad30b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-10-04 13:53:04</sys_updated_on>
        <table>scan_script_only_check</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
