<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_script_only_check">
    <scan_script_only_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>security</category>
        <description>The "glide.guest.active.session.life_span" system property enforce max lifespan on active guest HTTP sessions irrespective of inactive timeout. The configured value is in minutes and the value of zero will disable timing out the active sessions. A larger maximum lifespan could allow an attacker to persist a stolen session for longer, increasing the scope of a security incident. This particular property is limited to Guest users, which have low privilege access to an instance.</description>
        <documentation_url>https://docs.servicenow.com/csh?topicname=sc-limit-guests-active-session-life-span.html&amp;version=latest</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Guests' Active Session Life Span is not limited</name>
        <priority>3</priority>
        <resolution_details>Set the system property "glide.guest.active.session.life_span" to a value greater than 0 and less than or equal to 720.</resolution_details>
        <run_condition>gs.getProperty('scan_script_only_check_96e3b9d597273590b05bb08fe153afe9','')==''</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {
	
	var _strPropertyName = 'glide.guest.active.session.life_span';
	var _grProperty      = new GlideRecord('sys_properties');
	var _hasFinding      = true;
	
	if (_grProperty.get('name', _strPropertyName)) {		
		var _strPropertyType  = String(_grProperty.getValue('type') || '').toLowerCase().trim();
		var _strPropertyValue = String(_grProperty.getValue('value') || '').toLowerCase().trim();
		var _numPropertyValue = parseInt(_strPropertyValue, 10);
		
		_hasFinding = 
			_strPropertyType !== 'integer' || 
			isNaN(_numPropertyValue) || 
			_numPropertyValue < 1 ||
			_numPropertyValue > 720;
	}
	else {
		engine.finding.setValue(
			'finding_details', 
			'System Property "' + _strPropertyName + '" does not exist'
		);
	}
	
	if (_hasFinding) {
		if (_grProperty.isValidRecord()) {
			engine.finding.setCurrentSource(_grProperty);
		}
		
		engine.finding.increment();		
	}	
})(engine);]]></script>
        <short_description>Guests' Active Session Life Span is not limited</short_description>
        <sys_class_name>scan_script_only_check</sys_class_name>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2024-01-04 13:35:06</sys_created_on>
        <sys_id>96e3b9d597273590b05bb08fe153afe9</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Guests' Active Session Life Span is not limited</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>scan_script_only_check_96e3b9d597273590b05bb08fe153afe9</sys_update_name>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-10-04 13:45:46</sys_updated_on>
    </scan_script_only_check>
    <sys_translated_text action="delete_multiple" query="documentkey=96e3b9d597273590b05bb08fe153afe9"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>96e3b9d597273590b05bb08fe153afe9</id>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2024-10-04 13:45:45</sys_created_on>
        <sys_id>bdf9b02183c15210c1321429feaad390</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-10-04 13:45:45</sys_updated_on>
        <table>scan_script_only_check</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
