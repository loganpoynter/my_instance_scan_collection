<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_script_only_check">
    <scan_script_only_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>manageability</category>
        <description>Many-to-many records which have been created, manually or through scripted logic, but somehow the "from field" value or the "to field" value is invalid. Invalid as in it has a Sys ID value, though the referenced record doesn't exist. This results in so-called "broken" references. Obviously this could lead to the relationship between both records not working, not being visible, logic based on this which won't work, etcetera.

With the help of the following filter condition, you can filter them: &lt;FIELD&gt; is not empty AND &lt;FIELD.SysID&gt; is empty</description>
        <documentation_url>https://docs.servicenow.com/csh?version=latest&amp;t_CreateAManyToManyRelationship.html</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>M2M Tables with broken References</name>
        <priority>2</priority>
        <resolution_details>Especially on older instances, you could be faced with thousands of findings. Obviously you need to consider fixing the data, though also searching for the issue which is actually causing this.</resolution_details>
        <run_condition>gs.getProperty('scan_script_only_check_05dbc8171bf35510ef13a9b4bd4bcbb2','')==''</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	// Query M2M Definition records
	var grM2MDefinition = new GlideRecord('sys_m2m');
	
	grM2MDefinition.addEncodedQuery(
		'm2m_tableISNOTEMPTY^' + 
		'm2m_to_fieldISNOTEMPTY^' + 
		'm2m_from_fieldISNOTEMPTY'
	);
	grM2MDefinition.query();

	while (grM2MDefinition.next()) {
		if (gs.tableExists(grM2MDefinition.getValue('m2m_table')) &&
			gs.tableExists(grM2MDefinition.getValue('from_table')) && 
			gs.tableExists(grM2MDefinition.getValue('to_table'))) 
		{
			var getRecord = new GlideRecord(grM2MDefinition.getValue('m2m_table'));
			
			getRecord.addEncodedQuery(
				grM2MDefinition.getValue('m2m_to_field') + 'ISNOTEMPTY^' + 
				grM2MDefinition.getValue('m2m_to_field') + '.sys_idISEMPTY^NQ' + 
				grM2MDefinition.getValue('m2m_from_field') + 'ISNOTEMPTY^' + 
				grM2MDefinition.getValue('m2m_from_field') + '.sys_idISEMPTY'
			);
			getRecord.addActiveQuery();
			getRecord.query();

			while (getRecord.next()) {
				engine.finding.setCurrentSource(getRecord);
				engine.finding.increment();
			}
		}
	}

})(engine);]]></script>
        <short_description>M2M Tables with broken References</short_description>
        <sys_class_name>scan_script_only_check</sys_class_name>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2022-12-21 05:12:37</sys_created_on>
        <sys_id>05dbc8171bf35510ef13a9b4bd4bcbb2</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>M2M Tables with broken References</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>scan_script_only_check_05dbc8171bf35510ef13a9b4bd4bcbb2</sys_update_name>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-01-14 11:47:27</sys_updated_on>
    </scan_script_only_check>
    <sys_translated_text action="delete_multiple" query="documentkey=05dbc8171bf35510ef13a9b4bd4bcbb2"/>
</record_update>
