<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.MJR_InstanceScanHelperUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Created in </description>
        <mobile_callable>false</mobile_callable>
        <name>MJR_InstanceScanHelperUtils</name>
        <sandbox_callable>true</sandbox_callable>
        <script><![CDATA[var MJR_InstanceScanHelperUtils = Class.create();
MJR_InstanceScanHelperUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {

    verifyOrphanAttachmentFindings: function() {
        /**
         * This function is used to verify the findings of Orphaned Attachments via sys_auto_flush [9eb1fd9e97c26614c64e72471153afa5].
         * javascript: new MJR_InstanceScanHelperUtils().verifyOrphanAttachmentFindings();
         * 
         * Created under SFSTRY0115504
         */
        var attachmentsForDeletion = [];
        var scanFindingsGr = new GlideRecord("scan_finding");
        scanFindingsGr.addEncodedQuery('check=f9aa5f3193bd86107ab2f55f7bba1080^sys_created_onONToday@javascript:gs.beginningOfToday()@javascript:gs.endOfToday()');
        scanFindingsGr.query();
        while (scanFindingsGr.next()) {
            var attachmentGr = new GlideRecord('sys_attachment');
            if (attachmentGr.get(scanFindingsGr.source)) {
                var tblName = attachmentGr.table_name;
                var tblSysId = attachmentGr.table_sys_id;
                if (tblName.startsWith('ZZ_YY')) {
                    tblName = tblName.substring(5);
                }
                if (gs.tableExists(tblName)) {
                    var _tblGr = new GlideRecord(tblName);
                    if (!_tblGr.get(tblSysId)) {
                        gs.info('Deleting orphaned attachment: ' + attachmentGr.getValue('sys_id'));
                        attachmentGr.deleteRecord();
                    }
                } else {
                    gs.error('Table ' + tblName + ' for attachment ' + attachmentGr.getUniqueValue() + ' does not exist!');
                }
            }
        }
    },
    type: 'MJR_InstanceScanHelperUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>Logan.Poynter@meijer.com</sys_created_by>
        <sys_created_on>2025-06-12 20:52:19</sys_created_on>
        <sys_id>f072439a474aea5051897652e36d4325</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>MJR_InstanceScanHelperUtils</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>sys_script_include_f072439a474aea5051897652e36d4325</sys_update_name>
        <sys_updated_by>Logan.Poynter@meijer.com</sys_updated_by>
        <sys_updated_on>2025-07-24 13:16:18</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>f072439a474aea5051897652e36d4325</id>
        <sys_created_by>Logan.Poynter@meijer.com</sys_created_by>
        <sys_created_on>2025-06-12 20:52:19</sys_created_on>
        <sys_id>29a24f1e474aea5051897652e36d4324</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>Logan.Poynter@meijer.com</sys_updated_by>
        <sys_updated_on>2025-06-12 20:52:19</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
