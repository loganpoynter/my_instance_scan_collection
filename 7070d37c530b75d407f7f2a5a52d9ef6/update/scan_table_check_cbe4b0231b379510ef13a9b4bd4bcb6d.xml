<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <category>manageability</category>
        <conditions table="sys_script">active=true^when=before^action_query=true^scriptLIKEaddEncodedQuery^scriptLIKE^^NQ^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item display_value="before" endquery="false" field="when" goto="false" newquery="false" operator="=" or="false" value="before"/>
            <item endquery="false" field="action_query" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="addEncodedQuery"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="^^NQ"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>When using the operator ^NQ in an encoded query within a business rule, the results appear in the list view, but the reference links are not correct.
A filter on a business rule that has a query with the operator ^NQ (second level condition) is applied only on the first part of the query. Although the business rule works correctly in the list, if a filter like Active=true is added, the filter is applied only on the first part of the query (before the ^NQ).</description>
        <documentation_url>https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0564887</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Found Usage of "^NQ" Operator in "before" Business Rules</name>
        <priority>3</priority>
        <resolution_details>This is expected behavior. The NQ (top level OR) operator will 'OR' all previous query terms with following query terms. When there are no previous query terms, it is equivalent to regular 'OR'. Adjust the business Rule to not use the NQ Operator or disable the Business rule. Check documentation for more information.</resolution_details>
        <run_condition>gs.getProperty('scan_table_check_cbe4b0231b379510ef13a9b4bd4bcb6d','')==''</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script/>
        <short_description>Found Usage of "^NQ" Operator in "before" Business Rules</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2022-12-22 02:39:38</sys_created_on>
        <sys_id>cbe4b0231b379510ef13a9b4bd4bcb6d</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Found Usage of "^NQ" Operator in "before" Business Rules</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>scan_table_check_cbe4b0231b379510ef13a9b4bd4bcb6d</sys_update_name>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-01-14 11:47:43</sys_updated_on>
        <table>sys_script</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_translated_text action="delete_multiple" query="documentkey=cbe4b0231b379510ef13a9b4bd4bcb6d"/>
</record_update>
