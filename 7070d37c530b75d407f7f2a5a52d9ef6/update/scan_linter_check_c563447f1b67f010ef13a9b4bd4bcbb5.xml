<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>manageability</category>
        <description>In general, you should use the array literal notation when possible. It is easier to read, it gives the compiler a chance to optimize your code, and it's mostly faster too.</description>
        <documentation_url>https://www.java67.com/2014/08/difference-between-string-literal-and-new-String-object-Java.html</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Usage of "new Array()"</name>
        <priority>4</priority>
        <resolution_details>Use [] instead of new Array().</resolution_details>
        <run_condition>gs.getProperty('scan_linter_check_c563447f1b67f010ef13a9b4bd4bcbb5','')==''</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	//only include customized artifacts as we cannot take care of OOTB artifacts
	var _grArtifact = new GlideRecord('sys_metadata');

	_grArtifact.addQuery('sys_id', engine.current.getUniqueValue());
	_grArtifact.setLimit(1);
	_grArtifact.query();

	if (new global.UpdateVersionAPI().getCustomerFileIds(_grArtifact).length == 0) {
		return;
	}


	//don't continue if current table is on the exclusion list
	var _strPropertyName     = 'my_instance_scan_collection.table_exclusion_list';
	var _strExcludedTables   = String(gs.getProperty(_strPropertyName, '')).trim();

	if (_strExcludedTables.length > 0) {
		var _arrExcludedTables      = _strExcludedTables.split(',');
		var _arrFinalExcludedTables = [];

		for (var _numIndex = 0; _numIndex < _arrExcludedTables.length; _numIndex++) {
			var _strExcludedTableName = _arrExcludedTables[_numIndex].trim();

			if (_strExcludedTableName.length > 0) {
				if (gs.tableExists(_strExcludedTableName)) {
					_arrFinalExcludedTables.push(_strExcludedTableName);
				}
			}				
		}

		if (_arrFinalExcludedTables.length > 0) {
			if (_arrFinalExcludedTables.indexOf(engine.current.getTableName()) !== -1) {
				return;
			}
		}		
	}
	

	engine.rootNode.visit(function(node) {
		if (node.getTypeName() === "NAME" && 
			node.getNameIdentifier() === "Array" && 
			node.getParent().getTypeName() === "NEW") 
		{
			engine.finding.incrementWithNode(node);
		}
	});

})(engine);]]></script>
        <short_description>Usage of "new Array()"</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2021-11-07 15:03:42</sys_created_on>
        <sys_id>c563447f1b67f010ef13a9b4bd4bcbb5</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Usage of "new Array()"</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>scan_linter_check_c563447f1b67f010ef13a9b4bd4bcbb5</sys_update_name>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2025-02-22 02:50:48</sys_updated_on>
    </scan_linter_check>
    <sys_translated_text action="delete_multiple" query="documentkey=c563447f1b67f010ef13a9b4bd4bcbb5"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>c563447f1b67f010ef13a9b4bd4bcbb5</id>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2025-02-22 02:50:47</sys_created_on>
        <sys_id>5e3c2c7e83ff1210c1321429feaad3d3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2025-02-22 02:50:47</sys_updated_on>
        <table>scan_linter_check</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
