<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_script_only_check">
    <scan_script_only_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>security</category>
        <description>If system property "glide.cs.debug" is not set to the recommended value of "false", then chat server messages logging is enabled. This could lead to unintended sensitive information leak through system logs. Setting the property value to true enables logging chat server messages on system logs. As a lot of log messages are generated, it is advised to enable it only when troubleshooting chat server. After troubleshooting, the property should be disabled to avoid clogging system logs. Setting the property to false, which is also the default value does not log chat server messages on system logs.</description>
        <documentation_url>https://docs.servicenow.com/csh?topicname=sc-disable-locked-form-elements-debugging.html&amp;version=latest</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Enabled Chat Server Debug Logging on PROD</name>
        <priority>4</priority>
        <resolution_details>Ensure thesystem property "glide.cs.debug" is set to "false".</resolution_details>
        <run_condition>gs.getProperty('scan_script_only_check_54f2886497c08e50b05bb08fe153af07','') == '' &amp;&amp; gs.getProperty('sn_appclient.instance_type') === 'production'</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(engine) {

	var _strPropertyName = 'glide.cs.debug';
	var _grProperty      = new GlideRecord('sys_properties');
	var _hasFinding      = true;
	
	if (_grProperty.get('name', _strPropertyName)) {		
		var _strPropertyType  = String(_grProperty.getValue('type') || '').toLowerCase().trim();
		var _strPropertyValue = String(_grProperty.getValue('value') || '').toLowerCase().trim();
		
		_hasFinding = 
			!(_strPropertyType == 'boolean' || _strPropertyType == 'string') || 
			_strPropertyValue !== 'false';
	}
	else {
		engine.finding.setValue(
			'finding_details', 
			'System Property "' + _strPropertyName + '" does not exist'
		);
	}
	
	if (_hasFinding) {
		if (_grProperty.isValidRecord()) {
			engine.finding.setCurrentSource(_grProperty);
		}
		
		engine.finding.increment();		
	}
	
})(engine);]]></script>
        <short_description>Enabled Chat Server Debug Logging on PROD</short_description>
        <sys_class_name>scan_script_only_check</sys_class_name>
        <sys_created_by>maik.skoddow</sys_created_by>
        <sys_created_on>2024-01-26 17:57:29</sys_created_on>
        <sys_id>54f2886497c08e50b05bb08fe153af07</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Enabled Chat Server Debug Logging on PROD</sys_name>
        <sys_package display_value="My Instance Scan Collection" source="7070d37c530b75d407f7f2a5a52d9ef6">7070d37c530b75d407f7f2a5a52d9ef6</sys_package>
        <sys_policy/>
        <sys_scope display_value="My Instance Scan Collection">7070d37c530b75d407f7f2a5a52d9ef6</sys_scope>
        <sys_update_name>scan_script_only_check_54f2886497c08e50b05bb08fe153af07</sys_update_name>
        <sys_updated_by>maik.skoddow</sys_updated_by>
        <sys_updated_on>2024-01-27 03:16:17</sys_updated_on>
    </scan_script_only_check>
    <sys_translated_text action="delete_multiple" query="documentkey=54f2886497c08e50b05bb08fe153af07"/>
</record_update>
